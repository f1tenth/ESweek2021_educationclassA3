# -- GENERAL -----------------------------------------------------------------------------------------------------------
[GENERAL]
# color the splines according to their cost (only in offline graph plot)
cost_dep_color=false

# enable / disable follow mode log
log_follow_mode=true

# start pose validation (set received pose in relation to the state lattice)
max_pos_offset=16.0
max_heading_offset=0.8

[VP]
# specify the velocity planner to be used, available options (do not use quotationmarks here):
# * fb - forward-backward solver
# * sqp - SQP solver (details and download via https://github.com/TUMFTM/velocity_optimization)
vp_type=fb

[ACTIONSET]
# -- APPROVAL OF ACTION PRIMITIVES -------------------------------------------------------------------------------------
# maximum accepted velocity bound violation for generated overtaking maneuvers
v_max_offset=0.1

# -- MULTIPLE SOLUTIONS PER ACTION SET ---------------------------------------------------------------------------------
# maximum number of path soltions to be returned (NOTE: performance will significantly drop for values >1!)
max_solutions=1

# amount of cost difference over the total paths to be considered for multiple returned paths
# (NOTE: the larger this value, the slower the path search!)
max_cost_diff=1

[FOLLOW]
# -- FOLLOW MODE -------------------------------------------------------------------------------------------------------
# select the follow mode controller (available tpyes: 'PD', 'PDtan')
controller_type=PD

# -- PD controller --
# c_p:  controller set point in front of target vehicle in percent of safety distance (must be larger or equal to 1.0)
# k_d:  differential control coefficient for follow mode (weighting velocity mismatch)
# k_p:  proportional control coefficient for follow mode (weighting offset from control distance)
control_params_PD={"c_p": 1.25,
                   "k_d": 0.025,
                   "k_p": 0.2
                   }

# -- PD controller with tangens activation --
# c_p:  controller set point in front of target vehicle in percent of safety distance (must be larger or equal to 1.0)
# k_d:  differential control coefficient for follow mode (weighting velocity mismatch)
# k_p:  proportional control coefficient for follow mode (weighting offset from control distance, output axis of tan)
# tan_w: control error distance at which the maximum value of the tangens is reached (scales tangens along input axis)
control_params_PDtan={"c_p": 1.15,
                      "k_d": 0.025,
                      "k_p": 0.2,
                      "tan_w": 15.0
                     }

[SMOOTHING]
# -- VEL SMOOTHING -----------------------------------------------------------------------------------------------------
# width (in elements) of the moving average velocity smoothing window -> this value must be odd!
filt_window_width=1

[DELAY]
# -- VEL DELAY COMP ----------------------------------------------------------------------------------------------------
# delay compensation for the velocity profile in seconds (how much of the velocity profile should remain constant)
delaycomp=0.100

[COST]
# -- COST --------------------------------------------------------------------------------------------------------------
# online cost reduction per previously planned path segment; each list entry maps to one spline segment in the future
# NOTE: with the cost reduction of previously planned segments one can drive the planner to a less erratic behavior
w_last_edges=[0.0, 0.5, 0.8]

[OBJECTS]
# -- OPPONENT VEHICLES -------------------------------------------------------------------------------------------------
# expected opponent width (including safety margin), which is used to inflate the overtaking zones
zone_opp_width=5.0

[EXPORT]
# -- SPECIFY TRAJECTORY EXPORT -----------------------------------------------------------------------------------------
# specify the maximum amount of points to belong to a trajectory (longer trajectories will be cut before export - e.g.
# use this, when the velocity profile does not add any further information to trajectory points indexed beyond this pnt)
nmbr_export_points=115

[CALC_TIME]
# -- CALCULATION TIME RELATED OPTIONS ----------------------------------------------------------------------------------
# a calculation time warning is printed, when threshold is exceeded (in sec)
calc_time_warn_threshold=0.15

# calc time safety factor - the average calculation time is multiplied with this factor to determine the lenght of the
# path segment which must stay constant from one to another iteration
calc_time_safety=2.0

# calc time buffer length for the calculation of the moving average calculation time
calc_time_buffer_len=5
