[LATTICE]
# -- STATE LATTICE PARAMETERIZATION ------------------------------------------------------------------------------------
# state space discretization in m - distance of nodes laterally distributed on each normal vector
lat_resolution=0.10

# flag, defining whether the heading of each node is linearly sampled between the bounds orientation and the race line
# heading (else: all points with same heading as raceline)
variable_heading=True

# maximum separation of norm vectors (hosting the nodes) along the ref/race line on straights in meters
lon_straight_step=5.0

# maximum separation of norm vectors (hosting the nodes) along the ref/race line in curves in meters
# NOTE: Try to specify with a significant offset to the originating quantification
lon_curve_step=2.0

# curve threshold (curvature, i.e. recipocal of curve radius) used to toggle between straight and curve segments
curve_thr=0.010

# allowed lateral offset [relative to raceline] per travelled meter
lat_offset=0.15

# virtual goal node for each layer - the graph search results in the virtual goal node instead of iteratively triggering
# a path search to the race-line node, followed by adjacent nodes in the goal layer until successfull
virt_goal_n=True

# minimum race speed compared to global race line (in percent)
# NOTE: all splines not allowing this velocity will be removed --> set this value to 0.0 in order to allow all splines
min_vel_race=0.00

# closure detection distance in m
# if the first and last point of the track are closer to each other than this distance, a closed track is assumed
closure_detection_dist=2.0

[PLANNINGTARGET]
# -- PLANNING TARGET VELOCITY ------------------------------------------------------------------------------------------
# velocity decrease on lateral offset (percentage of goal velocity reduction per meter of lateral displacement of the
# planning goal point relative to the raceline)
vel_decrease_lat=0.1

# -- PLANNING HORIZON --------------------------------------------------------------------------------------------------
# minimum planning horizon - number of layers to be considered in the online graph (distance or direct number of layers)
min_plan_horizon=40

# specify to use distance ('distance') based planning horizon calculation or a fixed number of layers ('layers')
# NOTES: - Do not use quotation marks here!
#        - When using the 'layers' mode, the lon_straight_step and lon_curve_step must be considered accordingly!
plan_horizon_mode=distance

[SAMPLING]
# -- COORDINATE SAMPLING SETTINGS --------------------------------------------------------------------------------------
# aproximated step-size for all generated splines (do not choose this value too large for reasonable collision checking)
stepsize_approx=0.1

[VEHICLE]
# -- VEHICLE PARAMETERS ------------------------------------------------------------------------------------------------
# vehicle width in m (in order to obtain a higher safety distance to walls and objects, simply increase this value)
veh_width=0.40

# vehicle length in m (in order to obtain a safety distance in follow mode)
veh_length=0.58

# vehicle turn radius in m (all splines violating this radius will be removed)
veh_turn=1.0

[COST]
# -- COST --------------------------------------------------------------------------------------------------------------
# cost per meter (length) and per lateral meter added to nodes apart from raceline
w_raceline=1.0

# saturation of race line cost /m (race line cost is increased with rising lateral offset until this value is reached)
w_raceline_sat=1.0

# cost per spline meter
w_length=0.0

# cost weighting of average curvature per meter
w_curv_avg=7500.0

# cost weighting of peak curvature in the spline of interest per meter
w_curv_peak=2500.0

# virtual goal - per meter lateral offset to race line node
w_virt_goal=10000.0
